{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\nThis is the about page.\n\n\n\n",
      "last_modified": "2022-04-29T15:25:37+02:00"
    },
    {
      "path": "basic-graph-theory.html",
      "title": "Basic Graph Theory",
      "description": "A brief introduction to graph and network theory\n",
      "author": [
        {
          "name": "Johannes Nakayama",
          "url": "https://example.com/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nMany naturally occurring phenomena can be described as networks.\nWhat is a graph?\nThe simplest class of graphs is completely defined by a set of vertices and edges. What are vertices and edges?\nYou can think of a vertex (sometimes called a “node”) as a dot in space and an edge as a line connecting two dots.\nThis, for instance, is a graph:\n\n\n\nNote that vertices are usually just labelled with numbers so that we can keep track of them.\nThis is also a graph:\n\n\n\nObviously, this one looks a little different.\nAnd this one:\n\n\n\n… looks yet a little different.\nBut what differentiates these examples? How can we describe graphs in a way that gives us a vocabulary to characterize them in a meaningful way?\nWe will get to these questions, but first, let’s examine why we would bother in the first place. What makes graphs so important?\nWhy graphs?\nGraphs are very versatile models of almost any kind relationship. They are “things” and how these “things” are connected to one another.\nThere are a lot of upsides to modeling relationships with graphs. First of all, graphs are very well formalized discrete mathematical structures. No matter the domain that we are modeling, we can profit from a large toolbox of mathematical analysis techniques and metrics.\nNow, what could we model with graphs?\nThe possibilities are really endless. You could model a social network where vertices are people and edges are relationships between them. This opens the gates for a flood of questions that you could ask about such a network. Can we find people that are very well connected? Can we identify cohesive communities in the network? Are there people who link two communities together? All these questions and many more can be addressed in a graph theoretic approach.\nYou could also model an electric grid with a graph. In this case, vertices would be transformation stations and edges would be powerlines. You could ask whether the malfunctioning of one station could lead to outages in another region. Or identify stations that could be considered high-risk targets of sabotage attacks.\nAnother example is traffic. A network could be the model for streets and crossings. Artificial cars could “drive” through the network. Now you can investigate what happens if an accident blocks an important crossing. Is there an enhanced risk of congestions? Are certain areas at a higher risk to experience congestions? How could building a new road aleviate traffic in an area that has a school?\nThese are only three examples and they all employ only the simplest of possible graph models. There are a lot more specifications of graphs that can be used for more specific problems (for instance, what happens if the relationships, i.e., the edges, are directed, or what if we differentiate between the importance of edges and attach a weight to them?).\nTalking about graphs\nBefore we go further into other types of graphs, let’s first build a basic vocabulary of how to talk about graphs. How can we quantify simple things about a graph to characterize certain aspects of it?\nNetwork size and density\nA low-hanging fruit is to first describe the size of a graph. We can count how many vertices a graph has, this is called the vertex count or node count. Unsurprisingly, the number of edges is called the edge count.\nThese two metrics seem inoccuously simple, but they give us everything we need to calculate an interesting metric that gives us a more meaningful way of characterizing a graph: it’s density.\nLook at these two graphs:\n\n\n\nThe difference between the two just hits you in the face right away. But there is a way to quantify it very easily.\nSo, what is network density?\nIn essence, it is the actual edge count divided by the number of possible edges in the graph.\n\\[\ndensity(G) = \\frac{edges(G)}{{possibleedges}(G)}\n\\]\nHow many edges can a graph with a fixed node count n possibly have? Well, there would be an edge between any two nodes in the network. A graph like that is called a complete graph.\nThe number of edges in a complete graph with n nodes is calculated as follows:\n\\[\n\\frac{n(n - 1)}{2}\n\\]\nTask: Can you figure out why?\nTask: Calculate the network density of the following graph:\n\n\n\nLet’s now take a look at vertices. What can we say about a vertex to describe it?\nWell, first there is the ID that we gave it, but that’s not very descriptive, is it?\nIn a simple graph like the ones that we just saw, there is one glaring thing that we can describe about a vertex: The number of edges that attach to it.\n\n\n\nLook at vertex 1. It has 2 edges attached to it. Vertex 7 has 5 edges attached to it.\nWe can see that this number differs between vertices. In a small graph like this one, these differences seem insignificant, but you will see that they make a huge difference, especially if you look at larger graphs.\nFor instance, if you use a graph to model a social network (vertices are people and edges are relationships among them), can you see how much of a difference it would make if one person has 1000 acquaintances and another one has only 20?\nThe number of edges that attach to a node is called the degree of a vertex (or simpler: node degree).\n\n\n\n",
      "last_modified": "2022-04-29T15:25:38+02:00"
    },
    {
      "path": "index.html",
      "title": "Basic Graph Theory",
      "description": "Welcome to the website. I hope you enjoy it!\n",
      "author": [],
      "contents": "\nThis is the home page.\n\n\n\n",
      "last_modified": "2022-04-29T15:25:39+02:00"
    }
  ],
  "collections": []
}
